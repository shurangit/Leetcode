//python


class Solution(object):
    def rotateRight(self, head, k):
        """
        :type head: ListNode
        :type k: int
        :rtype: ListNode
        """
        if not head:
            return head
        l=1
        cur=head
        while cur.next:
            cur=cur.next
            l+=1
        k%=l
        m=l-k
        cur.next=head
        while m>0:
            head=head.next
            cur=cur.next
            m-=1
        cur.next=None
        return head
        
//c++
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head) return head;
        int len=1;
        ListNode* newhead, *tail;
        tail=head;
        while(tail->next){
            len++;
            tail=tail->next;
        }
        tail->next=head;
        if(k%=len){
            for(int i=0;i<len-k;i++) tail=tail->next;
        }
        newhead=tail->next;
        tail->next=NULL;
        return newhead;
        
    
    }
};
