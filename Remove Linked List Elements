/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        while(head&&head->val==val) {
            ListNode* tmp=head->next;
            delete head;
            head=tmp;
        }
        ListNode* cur=head;
        ListNode* pre;
        while(head){
            if(head->val==val){
                pre->next=head->next;
                delete head;
                head=pre;
            }
            pre=head;
            head=head->next;
        }
        return cur;
    }
    
};
        
     
//python

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def removeElements(self, head, val):
        """
        :type head: ListNode
        :type val: int
        :rtype: ListNode
        """
        newhead=ListNode(-1)
        newhead.next=head
        cur=newhead
        while cur and cur.next:
            if cur.next.val==val:
                tmp=cur.next.next
                cur.next=tmp
            else:
                cur=cur.next
        return newhead.next
        
