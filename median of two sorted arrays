//python
class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """
        l=len(nums1)+len(nums2)
        if(l%2==1):
            return self.findKthElement(nums1,nums2,l//2+1)
        else:
            return (self.findKthElement(nums1,nums2,l//2+1)+self.findKthElement(nums1,nums2,l//2))/2.0
        
        
    def findKthElement(self,nums1,nums2,k):
        if len(nums1)>len(nums2):
            return self.findKthElement(nums2,nums1,k)
        if len(nums1)==0:
            return nums2[k-1];
        if k==1:
            return min(nums1[0],nums2[0])
        ia=min(k/2,len(nums1))
        ib=k-ia
        if nums1[ia-1]<=nums2[ib-1]:
            return self.findKthElement(nums1[ia:],nums2,k-ia)
        else:
            return self.findKthElement(nums1,nums2[ib:],k-ib)
            


//c++
